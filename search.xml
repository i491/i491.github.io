<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Xcode For Windows:在PC上安装Xcode的五种方法]]></title>
    <url>%2F2019%2F08%2F02%2Fxcode-on-windows%2F</url>
    <content type="text"><![CDATA[本文翻译自TechsviewerGoogle Translate提供翻译支持原文地址：https://techsviewer.com/xcode-for-windows/ Written by John你想要开发iOS app但是没有可以支持Apple操作系统的计算机吗？你不必担心，因为你可以在Windows计算机上运行Xcode。Xcode是一个值得信赖的macOS应用程序开发软件，它使人们可以轻松开发iOS，macOS，tvOS和watchOS软件。 Xcode自2003年以来一直作为免费软件程序提供源代码，自2019年1月起开始使用10.1版本。Apple Developer网站也提供以前版本的下载。无论你希望使用哪种版本的Xcode，您都必须知道如何在Windows PC上运行Xcode。但是你为什么要在Windows PC上使用Xcode？简而言之，你应该考虑使用Xcode，以便生成可能为其他操作系统创建的iOS友好版本的app。你还可以使用它来更好地控制你创建这些app的能力。 考虑到这一点，现在是时候看看你将如何访问Xcode for Windows PC。你可以考虑五种解决方案。 在PC上安装Xcode的五种方法1.在线租用Mac你的第一选择是在线租用Mac。具体来说，你不会将Mac物理机放在家中。相反，你将获得一个基于云的计算机为你工作。基于云的Mac的工作原理是，一个实体将拥有一系列在线连接的Mac。你将使用远程桌面连接或RDP通过其中一台Mac登录。之后，你将可以从任何Windows PC访问Mac。Mac-in-Cloud和Mac-Stadium等服务将为你提供访问这些Mac的权限。你可以在线支付每月访问这些服务的费用。你可以使用Windows或Linux附带的远程桌面客户端访问相关RDP。你可以登录Mac然后安装Xcode，以便开始使用你的app。 基于云的Mac有多种形式。你可以使用专用的Mac，从而可以完全访问数据中心内的单台计算机。可以使用可用于生成iOS app的Mac Build Server与Build Server一起使用，以便为你创建app。 2.使用VirtualBox在Windows上运行Xcode在Windows上运行Mac的下一个选择是VirtualBox。VirtualBox是一个免费软件，可让你创建macOS虚拟机。使用VirtualBox时，你可以在虚拟机与物理机之间共享文件。在VirtualBox上进行新的macOS设置的过程很容易理解。安装VirtualBox并运行新虚拟机后，可以通过增加其图形内存和内核来编辑虚拟机，以便更适合macOS运行。你需要通过命令提示符运行适当的macOS代码，尽管该代码应该很容易在线查找。 3.使用VMware Player（免费）VMware Player是一个有用的软件，可以在单个计算机上运行第二个操作系统。 VMware Player允许你在Windows上运行Mac虚拟机。Vmware Player的设计使你可以将桌面与设备隔离，并在原始操作系统上启用剪切和粘贴以及共享文件夹功能。受限制的虚拟机完全加密并受密码保护，从而确保只有授权用户才能与计算机上正在读取的数据进行交互。 macOS设置中的隐私设置和网络功能将与你的原生设置不同。更重要的是，当你运行VMware Player时，你可以更轻松地在计算机上加载Xcode。 4.为家庭购买Mac Mini或在办公室使用Mac mini是一款小型便携式计算机，价格相对便宜可以连接HDMI，USB和Thunderbolt。它也可以安装Xcode，然后可以在PC上使用远程桌面软件来控制Mac mini，比如Screens。 5.安装黑苹果（Hackintosh）你可以安装一个可以运行macOS的PC称为黑苹果。安装需要额外的努力并且更具技术性。 但好消息是，有很多资源可以帮助你构建这样的计算机。黑苹果社区非常技术化，所以一定要关注细节。 结束语完成正确的功能后，你就可以轻松地在Windows PC上安装Xcode。在上线和使计算机易于访问时，你有很多选择。看看这些要点，你就可以更轻松地上网并充分利用你的Xcode体验。你将能够在Windows PC上继续为iOS和其他Apple系统提供app，如果你想要提高你的能力，这一点非常有用。]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[本版本仅适用于Win环境本文关键字： Hexo绿色版，Hexo便携版，Hexo配置，Hexo，U盘 Hexo是一个快速、简洁且高效的博客框架，支持 GitHub Flavored Markdown 的所有功能；具有超快生成速度，让上百个页面在几秒内瞬间完成渲染；还拥有各式各样的插件等等。 但是就像很多教程里面写的那样，搭建 Hexo 本地环境，需要安装 Node.js、Git 以及使用 npm 进行安装和配置。这对于毫无经验的新手来说，是一个很大的挑战。同时，由于这些环境的存在，导致如果需要更换计算机的时候，重新安装配置一个新的Hexo环境，又得花费一些功夫。所以呢，锵锵，我们整合了一个 Hexo 便携版，来简化本地环境的部署。 版本介绍那么所谓的便携版到底是什么？便携版就是将 Hexo 本地环境所需要的各种依赖环境的整合到一起，做成的不需要安装的版本。 本便携版（Release 1.0.0）所包含的软件如下： Git: 2.7.4 Nodejs: 6.10.1 Npm: 4.4.1 Hexo: 3.2.2 为了便携的需要，不能配置固定的环境变量，所以除此之外还有相应的批处理文件，下文将详细介绍。 从零开始，1分钟搭建Hexo写作环境说了这么多，我们这就开始教你如何在1分钟内，从零开始搭建Hexo写作环境！ 1 注册一个Github帐号1.1 进入Github，并在右边的3个框框中分别填写 用户名、邮箱地址、账户密码，并点击 Sign up for Github; 1.2 进入欢迎页面后，点击Finish sign up; 1.3 进入到这一步之后（图1.3.1），先别记着点任何东西，查看你的邮箱，应该会收到如下的邮件（图1.3.2），确认你的邮件。否则，你会看到错误页面（图1.3.3）。query完毕之后在图1.3.1所示的页面，点击+ New repository; 1.4 请在红框中的 Repository name 里面输入 用户名.github.io ( 用户名 就是你刚刚 步骤1.1 中注册的用户名)，然后点击 Create repository; 1.5 至此，Github网页注册的部分完毕 2 下载HEXO Portable2.1 访问我们的 HEXO Portable 页面，或者 Github仓库 下载最新的便携版； 2.2 双击得到的自解压文件，解压到你需要安装博客的地方，可以选择硬盘或者U盘； 3 配置你的环境3.1 在你的博客的文件夹，你会发现很多批处理文件，我先介绍下各个文件的用途： 配置基本信息 &gt;&gt; 配置博客的基本环境 配置Github部署 &gt;&gt; 配置博客的部署 启动命令行 &gt;&gt; 启动带环境变量的Git-Bash，否则无法使用node、npm、git等命令 新建文章 &gt;&gt; 新建一篇文章 渲染并本地测试 &gt;&gt; 生成并本地预览 渲染并部署 &gt;&gt; 生成并部署到GitHub 重置配置文件 &gt;&gt; 重置_config.yml 3.2 我们继续进行环境配置，双击配置基本信息并按顺序输入以下信息： 主标题：顾名思义 副标题：顾名思义 描述：顾名思义 作者：顾名思义 网站地址：填写 用户名.github.io （此处的用户名为步骤1.1中填写的用户名）如果您已经购买了域名，可以参看相关的文章！ 3.3 双击配置Github部署并按顺序输入以下信息： Github的用户名：此处的用户名为步骤1.1中填写的用户名 Github注册邮箱：此处的注册邮箱为步骤1.1中填写的注册邮箱 3.4 输入完毕之后，会进行测试部署，等待屏幕提示下面将进行部署测试，稍后将有一个openssh的对话框出现，请输入你的github用户密码。的时候，按回车继续；（此处的用户密码为步骤1.1中填写的用户密码） 3.5 然后继续等待，此时屏幕会出现n多行，耐心等待即可； 3.6 等待屏幕提示请访问 https://用户名.github.io 查看是否部署成功！的时候，在浏览器中输入https://用户名.github.io ，理论上可以看到你的Hexo站点！（此处的用户名为步骤1.1中填写的用户名） 3.7 至此，你的Hexo环境就配置完成了，这样你的这个Hexo博客文件夹无论移动到哪一台电脑，都能通过启动命令行出现的bash命令行，或者其余便捷的批处理文件比如新建文章、渲染并本地测试、渲染并部署进行相应的操作。 3.8 如果你在配置中出错，可以运行重置配置文件后，再重复3.1~3.6步骤 4 开始享受纯粹的Hexo写作吧！5 备注 本便携版以及本文均使用 CC BY-NC-SA 4.0协议； 本文所有权归 QistChan &amp; Bitmoe Inc. 所有； 本便携版由 Bitmoe Inc. 维护并提供技术支持； 需要技术支持可以在Github仓库 提交Issues； Written with StackEdit.]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
