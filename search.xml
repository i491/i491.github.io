<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Xcode For Windows:在PC上安装Xcode的五种方法</title>
      <link href="/2019/08/02/xcode-on-windows/"/>
      <url>/2019/08/02/xcode-on-windows/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文翻译自Techsviewer<br>Google Translate提供翻译支持<br>原文地址：<a href="https://techsviewer.com/xcode-for-windows/" target="_blank" rel="external">https://techsviewer.com/xcode-for-windows/</a></p></blockquote><p><strong>Written by John</strong><br>你想要开发iOS app但是没有可以支持Apple操作系统的计算机吗？你不必担心，因为你可以在Windows计算机上运行Xcode。Xcode是一个值得信赖的macOS应用程序开发软件，它使人们可以轻松开发iOS，macOS，tvOS和watchOS软件。 Xcode自2003年以来一直作为免费软件程序提供源代码，自2019年1月起开始使用10.1版本。Apple Developer网站也提供以前版本的下载。<br><a id="more"></a><br>无论你希望使用哪种版本的Xcode，您都必须知道如何在Windows PC上运行Xcode。但是你为什么要在Windows PC上使用Xcode？简而言之，你应该考虑使用Xcode，以便生成可能为其他操作系统创建的iOS友好版本的app。你还可以使用它来更好地控制你创建这些app的能力。</p><p>考虑到这一点，现在是时候看看你将如何访问Xcode for Windows PC。你可以考虑五种解决方案。</p><h2 id="在PC上安装Xcode的五种方法"><a href="#在PC上安装Xcode的五种方法" class="headerlink" title="在PC上安装Xcode的五种方法"></a>在PC上安装Xcode的五种方法</h2><h3 id="1-在线租用Mac"><a href="#1-在线租用Mac" class="headerlink" title="1.在线租用Mac"></a>1.在线租用Mac</h3><p>你的第一选择是在线租用Mac。具体来说，你不会将Mac物理机放在家中。相反，你将获得一个基于云的计算机为你工作。基于云的Mac的工作原理是，一个实体将拥有一系列在线连接的Mac。你将使用远程桌面连接或RDP通过其中一台Mac登录。之后，你将可以从任何Windows PC访问Mac。<code>Mac-in-Cloud</code>和<code>Mac-Stadium</code>等服务将为你提供访问这些Mac的权限。你可以在线支付每月访问这些服务的费用。<br><img src="https://raw.githubusercontent.com/i491/i491.github.io/master/images/2019080201.jpg" alt="Xcode-in-macOS-Mojave-768x432.jpg"><br>你可以使用Windows或Linux附带的远程桌面客户端访问相关RDP。你可以登录Mac然后安装Xcode，以便开始使用你的app。</p><p>基于云的Mac有多种形式。你可以使用专用的Mac，从而可以完全访问数据中心内的单台计算机。可以使用可用于生成iOS app的<code>Mac Build Server</code>与<code>Build Server</code>一起使用，以便为你创建app。</p><h3 id="2-使用VirtualBox在Windows上运行Xcode"><a href="#2-使用VirtualBox在Windows上运行Xcode" class="headerlink" title="2.使用VirtualBox在Windows上运行Xcode"></a>2.使用VirtualBox在Windows上运行Xcode</h3><p>在Windows上运行Mac的下一个选择是VirtualBox。VirtualBox是一个免费软件，可让你创建macOS虚拟机。使用VirtualBox时，你可以在虚拟机与物理机之间共享文件。<br><img src="https://raw.githubusercontent.com/i491/i491.github.io/master/images/2019080202.jpg" alt="Run-Xcode-in-VirtualBox-768x631.jpg"><br>在VirtualBox上进行新的macOS设置的过程很容易理解。安装VirtualBox并运行新虚拟机后，可以通过增加其图形内存和内核来编辑虚拟机，以便更适合macOS运行。你需要通过命令提示符运行适当的macOS代码，尽管该代码应该很容易在线查找。</p><h3 id="3-使用VMware-Player（免费）"><a href="#3-使用VMware-Player（免费）" class="headerlink" title="3.使用VMware Player（免费）"></a>3.使用VMware Player（免费）</h3><p>VMware Player是一个有用的软件，可以在单个计算机上运行第二个操作系统。 VMware Player允许你在Windows上运行Mac虚拟机。<br><img src="https://raw.githubusercontent.com/i491/i491.github.io/master/images/2019080203.jpg" alt="Run-Xcode-in-VirtualBox-768x631.jpg"><br>Vmware Player的设计使你可以将桌面与设备隔离，并在原始操作系统上启用剪切和粘贴以及共享文件夹功能。受限制的虚拟机完全加密并受密码保护，从而确保只有授权用户才能与计算机上正在读取的数据进行交互。 macOS设置中的隐私设置和网络功能将与你的原生设置不同。更重要的是，当你运行VMware Player时，你可以更轻松地在计算机上加载Xcode。</p><h3 id="4-为家庭购买Mac-Mini或在办公室使用"><a href="#4-为家庭购买Mac-Mini或在办公室使用" class="headerlink" title="4.为家庭购买Mac Mini或在办公室使用"></a>4.为家庭购买Mac Mini或在办公室使用</h3><p>Mac mini是一款小型便携式计算机，价格相对便宜可以连接HDMI，USB和Thunderbolt。它也可以安装Xcode，然后可以在PC上使用远程桌面软件来控制Mac mini，比如<code>Screens</code>。<br><img src="https://raw.githubusercontent.com/i491/i491.github.io/master/images/2019080204.jpg" alt="Run-Xcode-in-Mac-768x477.jpg"></p><h3 id="5-安装黑苹果（Hackintosh）"><a href="#5-安装黑苹果（Hackintosh）" class="headerlink" title="5.安装黑苹果（Hackintosh）"></a>5.安装黑苹果（Hackintosh）</h3><p>你可以安装一个可以运行macOS的PC称为黑苹果。安装需要额外的努力并且更具技术性。 但好消息是，有很多资源可以帮助你构建这样的计算机。黑苹果社区非常技术化，所以一定要关注细节。</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>完成正确的功能后，你就可以轻松地在Windows PC上安装Xcode。在上线和使计算机易于访问时，你有很多选择。看看这些要点，你就可以更轻松地上网并充分利用你的Xcode体验。你将能够在Windows PC上继续为iOS和其他Apple系统提供app，如果你想要提高你的能力，这一点非常有用。</p>]]></content>
      
      
      <categories>
          
          <category> Xcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/02/hello-world/"/>
      <url>/2019/08/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop.png" alt=""></p><blockquote><p><strong>本版本仅适用于Win环境</strong><br>本文关键字： <strong>Hexo绿色版</strong>，<strong>Hexo便携版</strong>，<strong>Hexo配置</strong>，<strong>Hexo</strong>，<strong>U盘</strong></p></blockquote><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>是一个快速、简洁且高效的博客框架，支持 GitHub Flavored Markdown 的所有功能；具有超快生成速度，让上百个页面在几秒内瞬间完成渲染；还拥有各式各样的插件等等。</p><p>但是就像很多教程里面写的那样，搭建 Hexo 本地环境，需要安装 Node.js、Git 以及使用 npm 进行安装和配置。这对于毫无经验的新手来说，是一个很大的挑战。同时，由于这些环境的存在，导致如果需要更换计算机的时候，重新安装配置一个新的Hexo环境，又得花费一些功夫。<br><a id="more"></a><br>所以呢，锵锵，我们整合了一个 Hexo 便携版，来简化本地环境的部署。</p><p>####<strong>版本介绍</strong><br>那么所谓的便携版到底是什么？便携版就是将 Hexo 本地环境所需要的各种依赖环境的整合到一起，做成的不需要安装的版本。</p><p>本便携版（Release 1.0.0）所包含的软件如下：</p><blockquote><ul><li>Git: 2.7.4</li><li>Nodejs: 6.10.1</li><li>Npm: 4.4.1</li><li>Hexo: 3.2.2</li></ul></blockquote><p>为了便携的需要，不能配置固定的环境变量，所以除此之外还有相应的批处理文件，下文将详细介绍。</p><p>####<strong>从零开始，1分钟搭建Hexo写作环境</strong><br>说了这么多，我们这就开始教你如何在1分钟内，从零开始搭建Hexo写作环境！</p><p>#####1 注册一个Github帐号</p><p>1.1 进入<a href="https://github.com" target="_blank" rel="external">Github</a>，并在右边的3个框框中分别填写 用户名、邮箱地址、账户密码，并点击 <strong><code>Sign up for Github</code></strong>;</p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop2.png" alt="图1.1.1"></p><p>1.2 进入欢迎页面后，点击<strong><code>Finish sign up</code></strong>;</p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop3.png" alt="图1.2.1"></p><p>1.3 进入到这一步之后（<strong>图1.3.1</strong>），先别记着点任何东西，查看你的邮箱，应该会收到如下的邮件（<strong>图1.3.2</strong>），确认你的邮件。否则，你会看到错误页面（<strong>图1.3.3</strong>）。query完毕之后在<strong>图1.3.1</strong>所示的页面，点击<strong><code>+ New repository</code></strong>;</p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop5.png" alt="图1.3.1"></p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop6.png" alt="图1.3.2"></p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop7.png" alt="图1.3.3"></p><p>1.4 请在红框中的 <strong><code>Repository name</code></strong> 里面输入 <strong><code>用户名.github.io</code></strong> ( <strong>用户名</strong> 就是你刚刚 <strong>步骤1.1</strong> 中注册的用户名)，然后点击 <strong><code>Create repository</code></strong>;</p><p><img src="https://portablehexo.bitmoe.cn/hexopp/hexop8.png" alt="图1.4.1"></p><p>1.5 至此，Github网页注册的部分完毕</p><p>####2 下载HEXO Portable</p><p>2.1 访问我们的 <a href="https://project.bitmoe.cn/PortableHexo/" target="_blank" rel="external">HEXO Portable</a> 页面，或者 <a href="https://github.com/Bitmoe/PortableHexo" target="_blank" rel="external">Github仓库</a> 下载最新的便携版；</p><p>2.2 双击得到的自解压文件，解压到你需要安装博客的地方，可以选择硬盘或者U盘；</p><p>####3 配置你的环境</p><p>3.1 在你的博客的文件夹，你会发现很多批处理文件，我先介绍下各个文件的用途：</p><blockquote><ul><li>配置基本信息 &gt;&gt; 配置博客的基本环境</li><li>配置Github部署 &gt;&gt; 配置博客的部署</li><li>启动命令行 &gt;&gt; 启动带环境变量的Git-Bash，否则无法使用node、npm、git等命令</li><li>新建文章 &gt;&gt; 新建一篇文章</li><li>渲染并本地测试 &gt;&gt; 生成并本地预览</li><li>渲染并部署 &gt;&gt; 生成并部署到GitHub</li><li>重置配置文件 &gt;&gt; 重置_config.yml</li></ul></blockquote><p>3.2 我们继续进行环境配置，双击<strong><code>配置基本信息</code></strong>并按顺序输入以下信息：</p><blockquote><ul><li>主标题：顾名思义</li><li>副标题：顾名思义</li><li>描述：顾名思义</li><li>作者：顾名思义</li><li>网站地址：填写 <strong>用户名.github.io</strong> （此处的用户名为<strong>步骤1.1</strong>中填写的用户名）<br><strong>如果您已经购买了域名，可以参看相关的文章！</strong></li></ul></blockquote><p>3.3 双击<strong><code>配置Github部署</code></strong>并按顺序输入以下信息：</p><blockquote><ul><li>Github的用户名：此处的用户名为<strong>步骤1.1</strong>中填写的用户名</li><li>Github注册邮箱：此处的注册邮箱为<strong>步骤1.1</strong>中填写的注册邮箱</li></ul></blockquote><p>3.4 输入完毕之后，会进行测试部署，等待屏幕提示<strong>下面将进行部署测试，稍后将有一个openssh的对话框出现，请输入你的github用户密码。</strong>的时候，按回车继续；（此处的用户密码为<strong>步骤1.1</strong>中填写的用户密码）</p><p>3.5 然后继续等待，此时屏幕会出现n多行，耐心等待即可；</p><p>3.6 等待屏幕提示<strong>请访问 <a href="https://用户名.github.io" target="_blank" rel="external">https://用户名.github.io</a> 查看是否部署成功！</strong>的时候，在浏览器中输入<strong><a href="https://用户名.github.io" target="_blank" rel="external">https://用户名.github.io</a> </strong>，理论上可以看到你的Hexo站点！（此处的用户名为<strong>步骤1.1</strong>中填写的用户名）</p><p>3.7 至此，你的Hexo环境就配置完成了，这样你的这个Hexo博客文件夹无论移动到哪一台电脑，都能通过<strong>启动命令行</strong>出现的bash命令行，或者其余便捷的批处理文件比如<strong>新建文章</strong>、<strong>渲染并本地测试</strong>、<strong>渲染并部署</strong>进行相应的操作。</p><p>3.8 如果你在配置中出错，可以运行<strong>重置配置文件</strong>后，再重复<strong>3.1~3.6步骤</strong></p><p>####4 开始享受纯粹的Hexo写作吧！</p><p>####5 备注</p><blockquote><ul><li>本便携版以及本文均使用 <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="external">CC BY-NC-SA 4.0</a>协议；</li><li>本文所有权归 <a href="http://qistchan.com" target="_blank" rel="external">QistChan</a> &amp; <a href="https://wwww.bitmoe.com" target="_blank" rel="external">Bitmoe Inc.</a> 所有；</li><li>本便携版由 <a href="https://www.bitmoe.com" target="_blank" rel="external">Bitmoe Inc.</a> 维护并提供技术支持；</li><li>需要技术支持可以在<a href="https://github.com/Bitmoe/PortableHexo" target="_blank" rel="external">Github仓库</a> 提交<strong><code>Issues</code></strong>；</li><li>Written with <a href="https://stackedit.io/" target="_blank" rel="external">StackEdit</a>.</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
